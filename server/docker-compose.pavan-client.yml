version: '3.8'

services:
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    image: pavan-client-backend:latest
    container_name: pavan-client
    ports:
      - "5000:5000"  # Using port 5000
    environment:
      - NODE_ENV=production
      - PORT=5000
      - RUN_MODE=AZURE
      # Google OAuth Configuration
      - GOOGLE_CLIENT_ID=52772597205-9ogv54i6sfvucse3jrqj1nl1hlkspcv1.apps.googleusercontent.com
      - GOOGLE_CLIENT_SECRET=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
      - FRONTEND_URL=https://delightful-sea-062191a0f.2.azurestaticapps.net
      - BACKEND_URL=http://localhost:5000
      - GOOGLE_REDIRECT_URI=https://delightful-sea-062191a0f.2.azurestaticapps.net/auth/google/callback
      - HARDCODED_ACCOUNT_ID=106433552101751461082
      # Razorpay Configuration
      - RAZORPAY_KEY_ID=rzp_live_RFSzT9EvJ2cwJI
      - RAZORPAY_KEY_SECRET=7i0iikfS6eO7w4DSLXldCBX5
      - RAZORPAY_WEBHOOK_SECRET=gmb_boost_pro_webhook_secret_2024
      # Azure OpenAI Configuration
      - AZURE_OPENAI_ENDPOINT=https://agentplus.openai.azure.com/
      - AZURE_OPENAI_API_KEY=1TPW16ifwPJccSiQPSHq63nU7IcT6R9DrduIHBYwCm5jbUWiSbkLJQQJ99BDACYeBjFXJ3w3AAABACOG3Yia
      - AZURE_OPENAI_DEPLOYMENT=gpt-4o
      - AZURE_OPENAI_API_VERSION=2024-02-15-preview
      # Firebase Service Account (as JSON string - replaces serviceAccountKey.json file)
      - FIREBASE_SERVICE_ACCOUNT_KEY={"type":"service_account","project_id":"gbp-467810-a56e2","private_key_id":"691b16ad7ca8d1d42afc58368b05cd1b63c45a2f","private_key":"-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDVbHiWbLLRHhkZ\n675/Yv4siCJ6pEoLtyL+QF6wmePTsTykNtgEvtIIE0QvABDYGbaOkKU11j3Hc4lj\nk38AlM75tHDwHsFFBG/XqzZlMHv61ab9+UqZ+jUBtMDdt4V00MhlM9XsPHfi2g+c\nmIl9xDMgG5+uinORxPn3G4ZZfRtWaPTl+RSruseVjekWhfnINzAAnJYiMnSGPdyC\nLn+yT50ccKc2KeRzeC5gdTGVEHGzL7D4ROf+c8PG9bt2dneKKg50pBRew97dMWlE\nFPqRKf4UiRj2+j1nNYrVhIUSf8JF8bqu4Z9u6RjIiELyBdLpEq65j/G6p8/55ic/\n1ATJkyc1AgMBAAECggEAS/oGAbLng4dd8zrXwZyZlHvQHm3PCFWlSPLcYq0eDFX7\nmxAFHcdamNJXAw5YcL3SnfUDQ2Ol8ZOBVOgEnc3b0sv4KpsgPXQjZpkGT8aPVE/r\n110AQElwxk81G5kCEwBiXpix7pvmJ+VuClbJF3MZqjP7SBT0qG+BdwUe8kuVyFAF\nIHJXFDG8PYav6I/TSPpNWs7nTQyh51mI7vT6Hgev9ujJ1XR3ZifqakJ7rbAxdVIb\nF6dD0xek6+NsCQrzVs1Ey3MEjs3yx/hN34j4FEQ+kX070q9gOWZFfRVtOnVr/wVW\niQ2+KrbZ94K/H0JtEY5rfwmaY7qEL7WAQ2VqfbiEfwKBgQD5DnUmhPF6wB1Asubx\nqFz1dc8MpGhPp3G3m7hd1s4ukkiNiiuluZiUG4f1SnFhf7MnUmGFX78Ew6ZtkcUy\npwPLlNm8xAcV/At3BhHV3+jhDA4z2FlMsVLJ9nlZjE5iJ+P3yRR0zUA3tE/14gJm\nD04cx/FF3ntwl6UIcNd0PcbygwKBgQDbX7La4gndVMeeHEStn41wCecsec0/9O4f\nqSyQh1SIBHH+YUKGTjdbQwCJixfcXZrOl64YpKXr+pwvjdUNdKQ/2UqFOyuMXDC6\njT+RrqfeoONt11S63p9HE0DB7z/7DxPny3VQ8X9OknssTaWX8N2al0Cm6y37JSlW\nUiRbzGvx5wKBgQCelYge6NPiN2XpBoFrKqtWWJdoE1+gKJyOLwdsKRTMLrUn+uzj\n75Op6wXdOHONg4SN6zTRei/lVrcoWYNZR2NxQ+yI98ETTJP4S9MbfiGI+uYoOQBT\nhy2SD/EhBef7NC9CXbU60l6rmZK4nBqu5dv1E5MbzBiJjuW0xDVMfPGrBQKBgGM7\nRb9HEilBKU63AMX871Cn2h8/NX3hwDkoIFV8MduZDyt/OUVhah7pDvwoo/F1kgoz\niHfzOm6lHTNRl/cPNSEAnHnpywghx5ULQZ8Xfy3wXxAXoGcrPqc66UcQf0OEjX+D\nhBzKMMkM75SZxvcU6Fj+ZCtdJJ5/L9SxMWso7AcvAoGBAKzd+dIkMG3nof46rykR\no0Zz9ifDiwI5N0i7Z1Qzdx8f1wBpeeT5JvbiP2irKzIR0PNfZv/eCqjWAaNfhlcU\npXGL5ZTcT4X7lGfSyd5gcOKBdA+/3l4LTWufpdn/Owx+oGCu4atmFsYbht141MET\nXasumbydQoAB21lfSqQN5g01\n-----END PRIVATE KEY-----\n","client_email":"firebase-adminsdk-fbsvc@gbp-467810-a56e2.iam.gserviceaccount.com","client_id":"115995806276655666971","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url":"https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-fbsvc%40gbp-467810-a56e2.iam.gserviceaccount.com","universe_domain":"googleapis.com"}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { if (res.statusCode === 200) { process.exit(0) } else { process.exit(1) } })"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s
    networks:
      - pavan-client-network
    volumes:
      # Optional: Mount logs directory for debugging
      - ./logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"
    # Resource limits for better performance
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

networks:
  pavan-client-network:
    driver: bridge
    name: pavan-client-network

volumes:
  pavan-client-data:
    name: pavan-client-data